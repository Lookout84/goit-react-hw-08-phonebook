{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/Phone/reducer.js","redux/store.js","index.js","redux/Auth/auth-actions.js","redux/Auth/auth-reducer.js","redux/Auth/auth-operations.js","redux/Auth/auth-selectors.js","redux/Phone/actions.js"],"names":["Container","children","className","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","Nav","variant","activeKey","Item","Link","eventKey","as","NavLink","to","exact","mapDispatchToProps","onLogout","authOperations","logOut","email","getUseremail","avatar","defaultAvatar","Form","inline","src","alt","width","Badge","Button","type","onClick","AuthNav","Navbar","bg","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","PhoneBookPage","RegisterPage","LoginPage","App","this","onGetCurrentUser","fallback","Spinner","animation","size","path","getCurrentUser","items","createReducer","actions","fetchContactsSuccess","_","payload","addContactSuccess","deleteContactSuccess","filter","contact","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","filterContact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","phoneReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.7d832f59.chunk.js","sourcesContent":["import React from 'react';\r\n// import './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/Auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <Nav variant=\"pills\" className=\"justify-content-start\" activeKey=\"/home\">\r\n    <Nav.Item>\r\n      <Nav.Link eventKey=\"1\" as={NavLink} to=\"/\" exact>\r\n        Home Page\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n\r\n    {isAuthenticated && (\r\n      <Nav.Item>\r\n        <Nav.Link eventKey=\"2\" as={NavLink} to=\"/contacts\" exact>\r\n          Contacts\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )}\r\n  </Nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/Auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport { Button, Badge, Form } from 'react-bootstrap';\r\n\r\nconst UserMenu = ({ avatar, email, onLogout }) => (\r\n  <div>\r\n    <Form inline>\r\n      <img src={avatar} alt=\"\" width=\"32\" />\r\n      <Badge variant=\"dark\">\r\n        <span>{email}</span>\r\n      </Badge>{' '}\r\n      <Button variant=\"success\" type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </Button>{' '}\r\n    </Form>\r\n  </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUseremail(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <Nav variant=\"pills\" className=\"justify-content-end\" activeKey=\"/auth\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"1\" as={NavLink} to=\"/register\" exact>\r\n            Registration\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"2\" as={NavLink} to=\"/login\" exact>\r\n            Login\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/Auth';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\n// const styles = {\r\n//   header: {\r\n//     display: 'flex',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//     borderBottom: '1px solid #2A363B',\r\n//   },\r\n// };\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Nav className=\"mr-auto\">\r\n          <Navigation />\r\n        </Nav>\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/Auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { authSelectors } from '../redux/Auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\n// import PhoneBook from '../src/Views/PhoneBook';\r\nimport './App.css';\r\nimport { Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Container from './components/Container';\r\nimport { authOperations } from './redux/Auth';\r\nimport AppBar from './components/AppBar/AppBar';\r\n// import LoginPage from './Views/LoginPage';\r\n// import RegisterPage from './Views/RegisterPage';\r\n// import HomePage from './Views/HomePage';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('./Views/HomePage' /* webpackChunkName: \"home-page\" */),\r\n);\r\n\r\nconst PhoneBookPage = lazy(() =>\r\n  import('./Views/PhoneBook' /* webpackChunkName: \"phonebook-page\" */),\r\n);\r\n\r\nconst RegisterPage = lazy(() =>\r\n  import('./Views/RegisterPage' /* webpackChunkName: \"register-page\" */),\r\n);\r\n\r\nconst LoginPage = lazy(() =>\r\n  import('./Views/LoginPage' /* webpackChunkName: \"login-page\" */),\r\n);\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<Spinner animation=\"border\" size=\"sl\" />}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomePage} />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={PhoneBookPage}\r\n            />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterPage}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginPage}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport actions from './actions';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  // [actions.addNewContact]: (state, { payload }) => [...state, payload],\r\n  // [actions.deleteContact]: (state, { payload }) =>\r\n  //   state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, loading, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phoneReducer from './Phone/reducer';\r\nimport { authReducer } from './Auth';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: phoneReducer,\r\n  },\r\n  middleware,\r\n\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUseremail = state => state.auth.user.email;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUseremail,\r\n};\r\n","// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactsRequest');\r\nconst addContactSuccess = createAction('contacts/addContactsSuccess');\r\nconst addContactError = createAction('contacts/addContactsError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactsRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactsSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactsError');\r\n\r\nconst filterContact = createAction('contacts/FilterContact');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n};\r\n"],"sourceRoot":""}